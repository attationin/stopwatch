{"version":3,"sources":["index.js"],"names":["Stopwatch","state","intervalId","isStarted","seconds","minutes","msecondss","secondsString","minutesString","msecondssString","handleClick","setState","resetClick","this","style","textAlign","class","ResetButton","onResetBtn","bind","StartStopButton","onStartBtn","setInterval","timer","console","log","Component","props","onClick","render","document","getElementById"],"mappings":"kKAMMA,E,4MAEFC,MAAQ,CACJC,WAAY,KACZC,WAAY,EACZC,QAAU,EACVC,QAAU,EACVC,UAAY,EACZC,cAAgB,OAChBC,cAAgB,OAChBC,gBAAkB,Q,EAwCtBC,YAAc,WACV,EAAKC,SAAS,CAEVR,WAAY,EAAKF,MAAME,a,EAQ/BS,WAAa,WACT,EAAKD,SAAS,CACVN,QAAU,EAAKJ,MAAMI,QAAU,EAC/BD,QAAU,EAAKH,MAAMG,QAAU,EAC/BE,UAAY,EAAKL,MAAMK,UAAY,EACnCH,WAAY,K,uDAjChB,OAnBGU,KAAKZ,MAAMK,WAAa,EAEvBO,KAAKZ,MAAMQ,gBAAkB,IAAII,KAAKZ,MAAMK,UAE5CO,KAAKZ,MAAMQ,gBAAkBI,KAAKZ,MAAMK,UAEzCO,KAAKZ,MAAMG,SAAW,EAErBS,KAAKZ,MAAMM,cAAgB,IAAIM,KAAKZ,MAAMG,QAE1CS,KAAKZ,MAAMM,cAAgBM,KAAKZ,MAAMG,QAEvCS,KAAKZ,MAAMI,SAAW,EAErBQ,KAAKZ,MAAMO,cAAgB,IAAIK,KAAKZ,MAAMI,QAE1CQ,KAAKZ,MAAMO,cAAgBK,KAAKZ,MAAMI,QAItC,sBAAKS,MAAO,CAACC,UAAW,UAAxB,UACI,sBAAKC,MAAM,QAAX,UAAoBH,KAAKZ,MAAMO,cAA/B,IAA+CK,KAAKZ,MAAMM,cAA1D,IAA0EM,KAAKZ,MAAMQ,mBAErF,cAACQ,EAAD,CACIC,WAAYL,KAAKD,WAAWO,KAAKN,QAErC,cAACO,EAAD,CAGIjB,UAAWU,KAAKZ,MAAME,UACtBkB,WAAYR,KAAKH,YAAYS,KAAKN,a,0CA2B9C,IAAIX,EAAaoB,YAAYT,KAAKU,MAAMJ,KAAKN,MAAO,IAEpDA,KAAKF,SAAS,CAACT,WAAYA,M,8BAIA,GAAxBW,KAAKZ,MAAME,YAEVqB,QAAQC,IAAI,QACgB,IAAxBZ,KAAKZ,MAAMK,UACXO,KAAKF,SAAS,CAAEL,UAAW,EAAEF,QAASS,KAAKZ,MAAMG,QAAU,IAE3DS,KAAKF,SAAS,CAAEL,UAAWO,KAAKZ,MAAMK,UAAY,IAG5B,IAAtBO,KAAKZ,MAAMG,SACXS,KAAKF,SAAS,CAAEP,QAAS,EAAEC,QAASQ,KAAKZ,MAAMI,QAAU,S,GAvFjDqB,aA8FlBN,E,uKAEQ,IAAD,EAC2BP,KAAKc,MAA9BxB,EADF,EACEA,UAAWkB,EADb,EACaA,WAClB,OACI,8BAEQ,wBAAQL,MAAM,mBAAmBY,QAASP,EAA1C,SACI,+BAAOlB,EAAY,OAAS,kB,GARtBuB,aAoBxBT,E,uKAEQ,IACCC,EAAcL,KAAKc,MAAnBT,WACP,OACI,8BACI,6BACI,wBAAQF,MAAM,eAAgBY,QAASV,EAAvC,2B,GAPMQ,aAkB1BG,iBAAO,cAAC7B,EAAD,IAAc8B,SAASC,eAAe,W","file":"static/js/main.050349f3.chunk.js","sourcesContent":["\r\nimport {render} from \"react-dom\"\r\nimport React, {Component} from 'react'\r\n\r\n\r\n\r\nclass Stopwatch extends Component {\r\n\r\n    state = {\r\n        intervalId: null,\r\n        isStarted : false,\r\n        seconds : 0,\r\n        minutes : 0,\r\n        msecondss : 0,\r\n        secondsString : \"rabs\",\r\n        minutesString : \"rabs\",\r\n        msecondssString : \"rabs\"\r\n    }\r\n    \r\n    render(){\r\n        if(this.state.msecondss <= 9)\r\n        {\r\n            this.state.msecondssString = \"0\"+this.state.msecondss;\r\n        }else{\r\n            this.state.msecondssString = this.state.msecondss;\r\n        }\r\n        if(this.state.seconds <= 9)\r\n        {\r\n            this.state.secondsString = \"0\"+this.state.seconds;\r\n        }else{\r\n            this.state.secondsString = this.state.seconds;\r\n        }\r\n        if(this.state.minutes <= 9)\r\n        {\r\n            this.state.minutesString = \"0\"+this.state.minutes;\r\n        }else{\r\n            this.state.minutesString = this.state.minutes;\r\n        }\r\n\r\n        return(\r\n            <div style={{textAlign: \"center\"}}>\r\n                <div class=\"tablo\">{this.state.minutesString}:{this.state.secondsString}:{this.state.msecondssString}</div>\r\n              \r\n                <ResetButton\r\n                    onResetBtn={this.resetClick.bind(this)}\r\n                />\r\n                <StartStopButton\r\n\r\n\r\n                    isStarted={this.state.isStarted} \r\n                    onStartBtn={this.handleClick.bind(this)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            //seconds: this.state.seconds + 1,\r\n            isStarted: !this.state.isStarted\r\n        })\r\n        /*if (this.state.seconds == 59) {\r\n            this.setState({ seconds: 0,minutes: this.state.minutes + 1})\r\n        } else {\r\n            this.setState({ seconds: this.state.seconds + 1 });\r\n        }*/\r\n    }\r\n    resetClick = () => {\r\n        this.setState({\r\n            minutes : this.state.minutes = 0,\r\n            seconds : this.state.seconds = 0,\r\n            msecondss : this.state.msecondss = 0,\r\n            isStarted : false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n\r\n        let intervalId = setInterval(this.timer.bind(this), 10);\r\n        // store intervalId in the state so it can be accessed later:\r\n        this.setState({intervalId: intervalId});\r\n     }\r\n     \r\n     timer() {\r\n        if(this.state.isStarted == true)\r\n        {\r\n            console.log('tick');\r\n            if (this.state.msecondss == 99) {\r\n                this.setState({ msecondss: 0,seconds: this.state.seconds + 1})\r\n            } else {\r\n                this.setState({ msecondss: this.state.msecondss + 1 });\r\n            }\r\n\r\n            if (this.state.seconds == 59) {\r\n                this.setState({ seconds: 0,minutes: this.state.minutes + 1});\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass StartStopButton extends Component {\r\n\r\n    render() {\r\n        const {isStarted, onStartBtn} = this.props\r\n        return (\r\n            <div>\r\n                \r\n                    <button class=\"startstop_button\" onClick={onStartBtn}>\r\n                        <span>{isStarted ? 'stop' : 'start'}</span>\r\n                    </button>\r\n                    \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nclass ResetButton extends Component {\r\n\r\n    render() {\r\n        const {onResetBtn} = this.props\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    <button class=\"reset_button\"  onClick={onResetBtn}>\r\n                        reset\r\n                    </button>\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nrender(<Stopwatch/>, document.getElementById(\"root\"));"],"sourceRoot":""}